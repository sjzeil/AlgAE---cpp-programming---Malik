23 Where to place p'th object?
24 Start looking here.
25 Move j-1 element up.
26 Found where to put tmp.
28 Done.
42 Shell: Where to place i'th object?
44 Shell: Start looking at a[j].
45 Shell: Move j-gap element up.
46 Shell: Found where to put tmp.
47 Shell: Done with this element.
48 Shell: Now decrease the gap.
48 Shell: Done.
60 Start to build heap from array
61 percolate down from here
62 Start deleting elements
64 deleteMax: swap max element to end
65 deleteMax: restore heap by percolating down
67 heap sort: done
91 percDown percolate down from here
94 Move down?
95 Right child is larger
96 Swap with larger child?
97 Yes, swap with larger child.
101 Fill tmp into 'hole' at i
113 Set up for recursive merge sort
114 Completed recursive merge sort
126 New call to mergeSort
130 mergeSort: returned from 1st recursive call
131 mergeSort: returned from 2nd recursive call
132 mergeSort: merge completed
152 Main merge loop: copy smaller element
157 Copy rest of first half
160 Copy rest of right half
164 Copy TmpArray back
166 Done with this merge
174 Set up for recursive quicksort
175 Completed recursive quicksort
202 Cutting off quicksort
207 Sort low, middle, high
215 Place pivot at position high - 1
219 Begin partitioning
222 Increase i till a[i] >= pivot
223 Increasing i
224 Decrease j till a[j] <= pivot
225 Decreasing j
227 Exchange a[i] and a[j]
230 Exchanged
233 Restore pivot
235 Recursive calls
236 Return from 1st recursive call
237 Return from 2nd recursive call
